"0","# T·∫°o v√† l∆∞u m√¥ h√¨nh Logistic Regression"
"0","lr_recipe <- recipe(default.payment.next.month ~ ., data = train_data_original) %>%"
"0","  step_rm(any_of(c(""ID""))) %>%"
"0","  step_novel(all_nominal_predictors(), -all_outcomes()) %>%"
"0","  step_dummy(all_nominal_predictors(), -all_outcomes(), one_hot = TRUE) %>%"
"0","  step_zv(all_predictors()) %>%"
"0","  step_normalize(all_numeric_predictors()) %>%"
"0","  step_smote(default.payment.next.month, over_ratio = 1)"
"0",""
"0","lr_spec <- logistic_reg() %>% set_engine(""glm"")"
"0","lr_workflow <- workflow() %>% add_recipe(lr_recipe) %>% add_model(lr_spec)"
"0","model_lr_fitted <- fit(lr_workflow, data = train_data_original)"
"2","Warning :glm.fit: fitted probabilities numerically 0 or 1 occurred
"
"0","saveRDS(model_lr_fitted, paste0(MODELS_DIR, ""logistic_regression_final.rds""))"
"0",""
"0","# D·ª± ƒëo√°n tr√™n t·∫≠p ki·ªÉm tra"
"0","rf_pred_prob <- predict(final_rf_model, test_data_original, type = ""prob"")$.pred_1"
"0","rf_pred_class <- predict(final_rf_model, test_data_original)$.pred_class"
"0","rf_roc <- roc(response = test_data_original$default.payment.next.month, "
"0","              predictor = rf_pred_prob, "
"0","              levels = levels(test_data_original$default.payment.next.month))"
"2","G3;Setting direction: controls < cases
g"
"0","rf_conf_matrix <- confusionMatrix(rf_pred_class, test_data_original$default.payment.next.month, positive = ""1"")"
"0",""
"0","xgb_pred_prob <- predict(final_xgb_model, test_data_original, type = ""prob"")$.pred_1"
"0","xgb_pred_class <- predict(final_xgb_model, test_data_original)$.pred_class"
"0","xgb_roc <- roc(response = test_data_original$default.payment.next.month, "
"0","               predictor = xgb_pred_prob,"
"0","               levels = levels(test_data_original$default.payment.next.month))"
"2","G3;Setting direction: controls < cases
g"
"0","xgb_conf_matrix <- confusionMatrix(xgb_pred_class, test_data_original$default.payment.next.month, positive = ""1"")"
"0",""
"0","lr_pred_prob <- predict(model_lr_fitted, test_data_original, type = ""prob"")$.pred_1"
"0","lr_pred_class <- predict(model_lr_fitted, test_data_original)$.pred_class"
"0","lr_roc <- roc(response = test_data_original$default.payment.next.month, "
"0","              predictor = lr_pred_prob,"
"0","              levels = levels(test_data_original$default.payment.next.month))"
"2","G3;Setting direction: controls < cases
g"
"0","lr_conf_matrix <- confusionMatrix(lr_pred_class, test_data_original$default.payment.next.month, positive = ""1"")"
"0",""
"0","# T·∫°o b·∫£ng t·ªïng h·ª£p hi·ªáu su·∫•t"
"0","performance_summary_tuned <- data.frame("
"0","  Model = c(""Logistic Regression"", ""Random Forest (Tuned)"", ""XGBoost (Tuned)""),"
"0","  Accuracy = c(lr_conf_matrix$overall[""Accuracy""], rf_conf_matrix$overall[""Accuracy""], xgb_conf_matrix$overall[""Accuracy""]),"
"0","  Precision = c(lr_conf_matrix$byClass[""Precision""], rf_conf_matrix$byClass[""Precision""], xgb_conf_matrix$byClass[""Precision""]),"
"0","  Recall = c(lr_conf_matrix$byClass[""Recall""], rf_conf_matrix$byClass[""Recall""], xgb_conf_matrix$byClass[""Recall""]),"
"0","  F1 = c(lr_conf_matrix$byClass[""F1""], rf_conf_matrix$byClass[""F1""], xgb_conf_matrix$byClass[""F1""]),"
"0","  AUC = c(as.numeric(auc(lr_roc)), as.numeric(auc(rf_roc)), as.numeric(auc(xgb_roc)))"
"0",")"
"0",""
"0","cat(""\nT·ªïng h·ª£p hi·ªáu su·∫•t c√°c m√¥ h√¨nh tr√™n t·∫≠p ki·ªÉm tra:\n"")"
"1","
T·ªïng h·ª£p hi·ªáu su·∫•t c√°c m√¥ h√¨nh tr√™n t·∫≠p ki·ªÉm tra:
"
"0","kable(performance_summary_tuned, caption = ""T·ªïng h·ª£p hi·ªáu su·∫•t c√°c m√¥ h√¨nh (ƒë√£ tinh ch·ªânh)"", digits = 4)"
